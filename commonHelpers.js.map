{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nconst dateTimPicker = document.querySelector('#datetime-picker');\nconst startButt = document.querySelector('[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\nlet countInterval = null; \n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    \n    if (selectedDates <= new Date()) \n      {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future'\n        });\n        startButt.disabled = true;\n    } else {\n        userSelectedDate = selectedDates;\n        startButt.disabled = false;\n    }\n},\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\n  const addLeadingZero = value => String(value).padStart(2, '0');\n\n  const updateTimerDisplay = ({ days, hours, minutes, seconds }) => {\n      daysValue.textContent = days;\n      hoursValue.textContent = addLeadingZero(hours);\n      minutesValue.textContent = addLeadingZero(minutes);\n      secondsValue.textContent = addLeadingZero(seconds);\n  };\n  \n  const startTimer = () => {\n    countInterval = setInterval(() => {\n          const noWdate = new Date();\n          const timeLeft = userSelectedDate - noWdate;\n  \n          if (timeLeft <= 0) {\n              clearInterval(countInterval);\n              updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n              dateTimPicker.disabled = false;\n              return;\n          }\n  \n          const timeMilliseconds = convertMs(timeLeft);\n          updateTimerDisplay(timeMilliseconds);\n      }, 1000);\n  };\n  \n  \n  startButt.addEventListener('click', () => {\n      if (!userSelectedDate) {\n          return;\n      }\n      startButt.disabled = true;\n    dateTimPicker.disabled = true;\n    startTimer();\n    });\n\n   "],"names":["userSelectedDate","dateTimPicker","startButt","daysValue","hoursValue","minutesValue","secondsValue","countInterval","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","startTimer","timeLeft","timeMilliseconds"],"mappings":"+IAOA,IAAIA,EAAmB,KACvB,MAAMC,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAC5D,IAAIC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAEjBA,GAAiB,IAAI,MAErBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACrB,CAAS,EACDR,EAAU,SAAW,KAErBF,EAAmBS,EACnBP,EAAU,SAAW,GAE7B,CACA,EAEAS,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEE,MAAMC,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAEvDC,EAAqB,CAAC,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,KAAc,CAC9Dd,EAAU,YAAcW,EACxBV,EAAW,YAAcc,EAAeH,CAAK,EAC7CV,EAAa,YAAca,EAAeF,CAAO,EACjDV,EAAa,YAAcY,EAAeD,CAAO,CACvD,EAEQI,EAAa,IAAM,CACvBd,EAAgB,YAAY,IAAM,CAE5B,MAAMe,EAAWtB,EADD,IAAI,KAGpB,GAAIsB,GAAY,EAAG,CACf,cAAcf,CAAa,EAC3Ba,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEnB,EAAc,SAAW,GACzB,MACH,CAED,MAAMsB,EAAmBX,EAAUU,CAAQ,EAC3CF,EAAmBG,CAAgB,CACtC,EAAE,GAAI,CACb,EAGErB,EAAU,iBAAiB,QAAS,IAAM,CACjCF,IAGLE,EAAU,SAAW,GACvBD,EAAc,SAAW,GACzBoB,IACJ,CAAK"}