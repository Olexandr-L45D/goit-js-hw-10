{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\nconsole.log(selectedDates[0]);// масив обраних дат користувачем\n  },\n};\n\nconst elementses = {\n  second: document.querySelector('.clock-seconds'),\n  minute: document.querySelector('.clock-minutes'),\n  hour: document.querySelector('.clock-hours'),\n  day: document.querySelector('#days')\n  };\n\ndocument.querySelector(\"#datetime-picker\").flatpickr(options);\nnew flatpickr(\"#datetime-picker\", options);\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputClik = document.querySelector('#datetime-picker');\n inputClik.addEventListener('click', handlerButton)\n\nfunction handlerButton(event) {\n  flatpickr(\"#datetime-picker\", options);\n\n};\n//    .removeAttr('disabled');//роблю не активною\n\nlet userSelectedDate = [0]; // (0) = обраний час of uzer метод onClose()\n\nconst id = setInterval(() => {\n userSelectedDate -= 1000;\n//  const currentTemer = new Date();\nconst currentTeme = new Date();\nlet second = currentTeme.getSeconds();\nlet minute = currentTeme.getMinutes();\nlet hour = currentTeme.getHours();\nlet day = currentTeme.getDay();\nelementses.second.textContent = second;\nelementses.minute.textContent = minute;\nelementses.hour.textContent = hour;\nelementses.day.textContent = day;\n\nflatpickr(userSelectedDate, options) \n{    \n  if (currentTeme >= userSelectedDate) {\n      izitoast(\"Please choose a date in the future\")  \n  //передати user - alert\n  }\n  else {\n   return userSelectedDate\n  }\n}\n  if (!userSelectedDate) { \n    clearInterval(id); \n  }\n}, 1000);\n\nsetTimeout(()=>{\n    clearInterval(id)  \n},userSelectedDate*1000)\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    return { days, hours, minutes, seconds };\n  }\n  console.log(convertMs(userSelectedDate));\n\n  // addLeadingZero(value) {\n  //   padStart()\n  //   // console.log(addLeadingZero());\n  // } // додаэ ноль якщо менше 2 х символы додае 0\n\n  let izitoast = new iziToast('.container-clock timer', 250);\n"],"names":["options","selectedDates","elementses","flatpickr","inputClik","handlerButton","event","userSelectedDate","id","currentTeme","second","minute","hour","day","izitoast","convertMs","ms","days","hours","minutes","seconds","iziToast"],"mappings":"+IAIA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACzB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CACzB,CACH,EAEMC,EAAa,CACjB,OAAQ,SAAS,cAAc,gBAAgB,EAC/C,OAAQ,SAAS,cAAc,gBAAgB,EAC/C,KAAM,SAAS,cAAc,cAAc,EAC3C,IAAK,SAAS,cAAc,OAAO,CACrC,EAEA,SAAS,cAAc,kBAAkB,EAAE,UAAUF,CAAO,EAC5D,IAAIG,EAAU,mBAAoBH,CAAO,EAKzC,MAAMI,EAAY,SAAS,cAAc,kBAAkB,EAC1DA,EAAU,iBAAiB,QAASC,CAAa,EAElD,SAASA,EAAcC,EAAO,CAC5BH,EAAU,mBAAoBH,CAAO,CAEvC,CAGA,IAAIO,EAAmB,CAAC,CAAC,EAEzB,MAAMC,EAAK,YAAY,IAAM,CAC5BD,GAAoB,IAErB,MAAME,EAAc,IAAI,KACxB,IAAIC,EAASD,EAAY,aACrBE,EAASF,EAAY,aACrBG,EAAOH,EAAY,WACnBI,EAAMJ,EAAY,SAQpB,GAPFP,EAAW,OAAO,YAAcQ,EAChCR,EAAW,OAAO,YAAcS,EAChCT,EAAW,KAAK,YAAcU,EAC9BV,EAAW,IAAI,YAAcW,EAE7BV,EAAUI,EAAkBP,CAAO,EAE7BS,GAAeF,EACfO,EAAS,oCAAoC,MAIhD,QAAOP,EAGHA,GACH,cAAcC,CAAE,CAEpB,EAAG,GAAI,EAEP,WAAW,IAAI,CACX,cAAcA,CAAE,CACpB,EAAED,EAAiB,GAAI,EAEvB,SAASQ,EAAUC,EAAI,CAKnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACD,QAAQ,IAAIL,EAAUR,CAAgB,CAAC,EAOvC,IAAIO,EAAW,IAAIO,EAAS,yBAA0B,GAAG"}